const raw = `Date;Time;CO(GT);PT08.S1(CO);NMHC(GT);C6H6(GT);PT08.S2(NMHC);NOx(GT);PT08.S3(NOx);NO2(GT);PT08.S4(NO2);PT08.S5(O3);T;RH;AH;
10/10/2004;18:00:00;2.6;1360;150;11.9;1046;166;1056;113;1692;1268;13.6;48.9;0.7578;
10/25/2004;19:00:00;2.0;1292;112;9.4;955;103;1174;92;1559;972;13.3;47.7;0.7255;
11/10/2004;20:00:00;2.2;1402;88;9.0;939;131;1140;114;1555;1074;11.9;54.0;0.7502;
11/25/2004;21:00:00;2.2;1376;80;9.2;948;172;1092;122;1584;1203;11.0;60.0;0.7867;
12/10/2004;22:00:00;1.6;1272;51;6.5;836;131;1205;116;1490;1110;11.2;59.6;0.7888;
12/25/2004;23:00:00;1.2;1197;38;4.7;750;89;1337;96;1393;949;11.2;59.2;0.7848;
01/10/2005;00:00:00;1.2;1185;31;3.6;690;62;1462;77;1333;733;11.3;56.8;0.7603;
01/25/2005;01:00:00;1.0;1136;31;3.3;672;62;1453;76;1333;730;10.7;60.0;0.7702;
02/10/2005;02:00:00;0.9;1094;24;2.3;609;45;1579;60;1276;620;10.7;59.7;0.7648;
02/25/2005;03:00:00;0.6;1010;19;1.7;561;-200;1705;-200;1235;501;10.3;60.2;0.7517;
03/10/2005;04:00:00;-200;1011;14;1.3;527;21;1818;34;1197;445;10.1;60.5;0.7465;
03/25/2005;05:00:00;0.7;1066;8;1.1;512;16;1918;28;1182;422;11.0;56.2;0.7366;
04/10/2005;06:00:00;0.7;1052;16;1.6;553;34;1738;48;1221;472;10.5;58.1;0.7353;
04/25/2005;07:00:00;1.1;1144;29;3.2;667;98;1490;82;1339;730;10.2;59.6;0.7417;
05/10/2005;08:00:00;2.0;1333;64;8.0;900;174;1136;112;1517;1102;10.8;57.4;0.7408;
05/25/2005;09:00:00;2.2;1351;87;9.5;960;129;1079;101;1583;1028;10.5;60.6;0.7691;
06/10/2005;10:00:00;1.7;1233;77;6.3;827;112;1218;98;1446;860;10.8;58.4;0.7552;
06/25/2005;11:00:00;1.5;1179;43;5.0;762;95;1328;92;1362;671;10.5;57.9;0.7352;
07/10/2005;12:00:00;1.6;1236;61;5.2;774;104;1301;95;1401;664;9.5;66.8;0.7951;
07/25/2005;13:00:00;1.9;1286;63;7.3;869;146;1162;112;1537;799;8.3;76.4;0.8393;
08/10/2005;14:00:00;2.9;1371;164;11.5;1034;207;983;128;1730;1037;8.0;81.1;0.8736;
08/25/2005;15:00:00;2.2;1310;79;8.8;933;184;1082;126;1647;946;8.3;79.8;0.8778;
09/10/2005;16:00:00;2.2;1292;95;8.3;912;193;1103;131;1591;957;9.7;71.2;0.8569;
09/25/2005;17:00:00;2.9;1383;150;11.2;1020;243;1008;135;1719;1104;9.8;67.6;0.8185;
10/10/2005;18:00:00;4.8;1581;307;20.8;1319;281;799;151;2083;1409;10.3;64.2;0.8065;
10/25/2005;19:00:00;6.9;1776;461;27.4;1488;383;702;172;2333;1704;9.7;69.3;0.8319;`;

export const mock = raw.split("\n").map((line) => line.split(";"));

export const timeSeries = mock.slice(1).map((row) => ({
    date: row[0],
    time: row[1],
    co: parseFloat(row[2]),
    pt08s1: parseFloat(row[3]),
    nmhc: parseFloat(row[4]),
    c6h6: parseFloat(row[5]),
    pt08s2: parseFloat(row[6]),
    nox: parseFloat(row[7]),
    pt08s3: parseFloat(row[8]),
    no2: parseFloat(row[9]),
    pt08s4: parseFloat(row[10]),
    pt08s5: parseFloat(row[11]),
    t: parseFloat(row[12]),
    rh: parseFloat(row[13]),
    ah: parseFloat(row[14]),
}));

export const timeSeriesData = timeSeries.map((row) => [row.date, row.co]);
export const timeSeriesData2 = timeSeries.map((row) => [row.date, row.pt08s1]);
export const timeSeriesData3 = timeSeries.map((row) => [row.date, row.nmhc]);
export const timeSeriesData4 = timeSeries.map((row) => [row.date, row.c6h6]);
export const timeSeriesData5 = timeSeries.map((row) => [row.date, row.pt08s2]);
export const timeSeriesData6 = timeSeries.map((row) => [row.date, row.nox]);
export const timeSeriesData7 = timeSeries.map((row) => [row.date, row.pt08s3]);
export const timeSeriesData8 = timeSeries.map((row) => [row.date, row.no2]);
export const timeSeriesData9 = timeSeries.map((row) => [row.date, row.pt08s4]);
export const timeSeriesData10 = timeSeries.map((row) => [row.date, row.pt08s5]);
export const timeSeriesData11 = timeSeries.map((row) => [row.date, row.t]);
export const timeSeriesData12 = timeSeries.map((row) => [row.date, row.rh]);
export const timeSeriesData13 = timeSeries.map((row) => [row.date, row.ah]);
